import java.io.File;
import java.io.IOException;
import java.util.concurrent.Semaphore;

import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;


public class HiloMusica extends Thread{
	
	Clip audioClip;
	boolean fin;
	int cont = 100;
	String audioFilePath;
	
	public HiloMusica(String audioFilePath){
		this.audioFilePath = audioFilePath;
		
		fin = false;
		crearAudio(audioFilePath);
	}

	public void run(){
		
		while(!fin){
			try {
			repetirCancion();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		audioClip.close();
		
	}

	private void repetirCancion() throws InterruptedException {
		Thread.sleep(38200);
		
		audioClip.setFramePosition(0);
		audioClip.flush();
	}
	
	private void crearAudio(String audioFilePath) {
		File audioFile = new File(audioFilePath);
		try{
			AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile);
			AudioFormat format = audioStream.getFormat();
			DataLine.Info info = new DataLine.Info(Clip.class, format);
			audioClip = (Clip) AudioSystem.getLine(info);
			audioClip.open(audioStream);
			
			audioClip.start();
			
		} catch (UnsupportedAudioFileException ex) {
			System.out.println("The specified audio file is not supported.");
			ex.printStackTrace();
		} catch (LineUnavailableException ex) {
			System.out.println("Audio line for playing back is unavailable.");
			ex.printStackTrace();
		} catch (IOException ex) {
			System.out.println("Error playing the audio file.");
			ex.printStackTrace();
		}
	}
	
	public void stopMusic () {
		audioClip.stop();
	}
	
}
